definitions:
  api.createAccountRequest:
    properties:
      currency:
        type: string
    required:
    - currency
    type: object
  api.createUserRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - email
    - full_name
    - password
    - username
    type: object
  api.loginUserRequest:
    properties:
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  api.loginUserResponse:
    properties:
      access_token:
        type: string
      user:
        $ref: '#/definitions/api.userResponse'
    type: object
  api.transferRequest:
    properties:
      amount:
        type: integer
      currency:
        type: string
      from_account_id:
        minimum: 1
        type: integer
      to_account_id:
        minimum: 1
        type: integer
    required:
    - amount
    - currency
    - from_account_id
    - to_account_id
    type: object
  api.userResponse:
    properties:
      email:
        type: string
      full_name:
        type: string
      username:
        type: string
    type: object
  db.Account:
    properties:
      balance:
        type: integer
      created_at:
        type: string
      currency:
        type: string
      id:
        type: integer
      owner:
        type: string
    type: object
info:
  contact: {}
paths:
  /accounts:
    get:
      consumes:
      - application/json
      description: list accounts
      parameters:
      - description: Page ID
        in: query
        name: page_id
        required: true
        type: integer
      - description: Page Size
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Account'
            type: array
      security:
      - ApiKeyAuth: []
      summary: List accounts
      tags:
      - accounts
    post:
      consumes:
      - application/json
      description: create a new account with the input payload
      parameters:
      - description: Account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/api.createAccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Account'
      security:
      - ApiKeyAuth: []
      summary: Create a new account
      tags:
      - accounts
  /accounts/{id}:
    get:
      consumes:
      - application/json
      description: get account by ID
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Account'
      security:
      - ApiKeyAuth: []
      summary: Get an account
      tags:
      - accounts
  /transfers:
    post:
      consumes:
      - application/json
      description: create a new transfer with the input payload
      parameters:
      - description: Transfer info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/api.transferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Account'
      security:
      - ApiKeyAuth: []
      summary: Create a new transfer
      tags:
      - transfers
  /users:
    post:
      consumes:
      - application/json
      description: create a new user with the input payload
      parameters:
      - description: User info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/api.createUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.userResponse'
      summary: Create a new user
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: logs in a user with the input payload
      parameters:
      - description: User info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/api.loginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.loginUserResponse'
      summary: Login a user
      tags:
      - users
swagger: "2.0"
